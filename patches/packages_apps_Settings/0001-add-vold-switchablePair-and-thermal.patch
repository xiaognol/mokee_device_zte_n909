From 5c71d060a3127012d14de7db21f9172ab7818666 Mon Sep 17 00:00:00 2001
From: xiaognol <317065820@qq.com>
Date: Fri, 30 May 2014 16:22:22 +0800
Subject: [PATCH] add vold switchablePair and thermal

Change-Id: Ib5c5b80d75b946df6d346314445ee218fa9e4f41
Signed-off-by: xiaognol <317065820@qq.com>
---
 AndroidManifest.xml                                |  1 +
 res/values-zh-rCN/cm_strings.xml                   | 11 +++++
 res/values/cm_strings.xml                          | 10 ++++
 res/xml/device_info_memory.xml                     |  5 ++
 res/xml/performance_settings.xml                   |  4 +-
 .../settings/cyanogenmod/PerformanceSettings.java  | 28 ++++++++++-
 src/com/android/settings/deviceinfo/Memory.java    | 54 +++++++++++++++++++++-
 7 files changed, 110 insertions(+), 3 deletions(-)

diff --git a/AndroidManifest.xml b/AndroidManifest.xml
index 65e3231..1168705 100644
--- a/AndroidManifest.xml
+++ b/AndroidManifest.xml
@@ -72,6 +72,7 @@
     <uses-permission android:name="android.permission.CHANGE_PRIVACY_GUARD_STATE" />
     <uses-permission android:name="android.permission.READ_PHONE_BLACKLIST" />
     <uses-permission android:name="android.permission.CHANGE_PHONE_BLACKLIST" />
+    <uses-permission android:name="android.permission.REBOOT" />
 
     <!-- MOKEE PUSH PERMISSION START -->
     <uses-permission android:name="android.permission.BROADCAST_STICKY" />
diff --git a/res/values-zh-rCN/cm_strings.xml b/res/values-zh-rCN/cm_strings.xml
index f33eded..041686f 100644
--- a/res/values-zh-rCN/cm_strings.xml
+++ b/res/values-zh-rCN/cm_strings.xml
@@ -859,4 +859,15 @@
   <string name="menu_hidden_apps_reset_lock">重置锁定图案</string>
   <string name="protected_apps">受保护的应用</string>
   <string name="saving_protected_components">正在保存组件状态\u2026</string>
+    <!-- Performance Settings : Set on thermal option -->
+  <string name="performance_set_thermal">温控调频</string>
+  <string name="thermal_on_summary">温控调节模式开启中，最高频率将不支持手动锁定</string>
+  <string name="thermal_off_summary">温控调节模式已关闭，可以手动锁定最高频率</string>
+  <string name="storage_switch_title">默认存储切换</string>
+  <string name="storage_switch_summary_off">当前默认使用内置卡</string>
+  <string name="storage_switch_summary_on">当前默认使用SD卡</string>
+  <string name="reboot_prompt_title">重启确认</string>
+  <string name="reboot_prompt_message">"为使设置生效，系统需要重启。
+
+想现在就重启吗？"</string>
 </resources>
diff --git a/res/values/cm_strings.xml b/res/values/cm_strings.xml
index a8076fa..25b4474 100644
--- a/res/values/cm_strings.xml
+++ b/res/values/cm_strings.xml
@@ -703,6 +703,16 @@ two in order to insert additional control points. \'Remove\' deletes the selecte
     <string name="adb_notify">USB debugging notify</string>
     <string name="adb_notify_summary">Display a notification when USB debugging is connected</string>
 
+    <!-- Vold Switchable Pair -->
+    <string name="storage_switch_title">Use external SD as primary</string>
+    <string name="storage_switch_summary_off">Using expanded internal storage for apps and media</string>
+    <string name="storage_switch_summary_on">Using SD Card for apps and media</string>
+    <string name="reboot_prompt_title">Reboot required</string>
+    <string name="reboot_prompt_message">In order to apply the changed configuration, a reboot is required.\n\nDo you want to reboot now?</string>
+    <!-- Performance Settings : Set on thermal option -->
+    <string name="performance_set_thermal">Set Thermal</string>
+    <string name="thermal_on_summary">Thermal Mode is on,the manual MAX-Frequency is not avaliable</string>
+    <string name="thermal_off_summary">manual MAX-Frequency is OK,now you can change the Max-Frequency manually.</string>
     <!-- Android debugging over WiFi -->
     <string name="adb_over_network">ADB over network</string>
     <string name="adb_over_network_summary">Enable TCP/IP debugging over network interfaces (Wi-Fi, USB networks). This setting is reset on reboot</string>
diff --git a/res/xml/device_info_memory.xml b/res/xml/device_info_memory.xml
index e905f39..2010b2c 100644
--- a/res/xml/device_info_memory.xml
+++ b/res/xml/device_info_memory.xml
@@ -16,6 +16,11 @@
 
 <PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android"
         android:title="@string/storage_settings_title">
+    <CheckBoxPreference
+        android:key="key_switch_storage"
+        android:title="@string/storage_switch_title"
+        android:summaryOn="@string/storage_switch_summary_on"
+        android:summaryOff="@string/storage_switch_summary_off" />
 
 <!-- Preference categories are dynamically created based on the list of available storage volumes -->
 
diff --git a/res/xml/performance_settings.xml b/res/xml/performance_settings.xml
index c6064e1..d358558 100644
--- a/res/xml/performance_settings.xml
+++ b/res/xml/performance_settings.xml
@@ -70,5 +70,7 @@
             android:title="@string/pref_force_highend_gfx_title"
             android:summary="@string/pref_force_highend_gfx_summary" />
     </PreferenceCategory>
-
+    <CheckBoxPreference
+        android:key="set_thermal"
+        android:title="@string/performance_set_thermal" />
 </PreferenceScreen>
diff --git a/src/com/android/settings/cyanogenmod/PerformanceSettings.java b/src/com/android/settings/cyanogenmod/PerformanceSettings.java
index e3380fd..47f8d97 100644
--- a/src/com/android/settings/cyanogenmod/PerformanceSettings.java
+++ b/src/com/android/settings/cyanogenmod/PerformanceSettings.java
@@ -58,6 +58,10 @@ public class PerformanceSettings extends SettingsPreferenceFragment implements
 
     private static final String FORCE_HIGHEND_GFX_PREF = "pref_force_highend_gfx";
     private static final String FORCE_HIGHEND_GFX_PERSIST_PROP = "persist.sys.force_highendgfx";
+/* For Thermald Switch by ZJL@Anzhi */
+    private CheckBoxPreference mThermal;
+    public static final String THERMAL_PROPERTY = "persist.sys.thermal.monitor";
+    private static final String THERMAL_KEY = "set_thermal";
 
     private ListPreference mPerfProfilePref;
     private CheckBoxPreference mUse16bppAlphaPref;
@@ -128,7 +132,13 @@ public class PerformanceSettings extends SettingsPreferenceFragment implements
         } else {
             category.removePreference(findPreference(FORCE_HIGHEND_GFX_PREF));
         }
-
+/* Add Thermald Switch by ZJL@AnZhi */
+	    mThermal = (CheckBoxPreference) prefSet.findPreference(THERMAL_KEY);
+            String thermal = SystemProperties.get(THERMAL_PROPERTY, "0");
+	    mThermal.setChecked("1".equals(thermal));
+	    updateThermalSummary();
+	
+/* Add Thermald Switch by ZJL@AnZhi */
         /* Display the warning dialog */
         alertDialog = new AlertDialog.Builder(getActivity()).create();
         alertDialog.setTitle(R.string.performance_settings_warning_title);
@@ -172,6 +182,10 @@ public class PerformanceSettings extends SettingsPreferenceFragment implements
         } else if (preference == mForceHighEndGfx) {
             SystemProperties.set(FORCE_HIGHEND_GFX_PERSIST_PROP,
                     mForceHighEndGfx.isChecked() ? "true" : "false");
+        } else if (preference == mThermal) {
+            SystemProperties.set(THERMAL_PROPERTY,
+                    mThermal.isChecked() ? "1" : "0");
+	    updateThermalSummary();
         } else {
             // If we didn't handle it, let preferences handle it.
             return super.onPreferenceTreeClick(preferenceScreen, preference);
@@ -232,4 +246,16 @@ public class PerformanceSettings extends SettingsPreferenceFragment implements
         mPerfProfilePref.setValue(mPowerManager.getPowerProfile());
         setCurrentPerfProfileSummary();
     }
+
+    private void updateThermalSummary() {
+	String thermal = SystemProperties.get(THERMAL_PROPERTY, "0");
+	if (SystemProperties.get(THERMAL_PROPERTY).equals("1")) {
+            mThermal.setSummary(R.string.thermal_on_summary);
+        }
+	else
+		{
+			mThermal.setSummary(R.string.thermal_off_summary);
+		}
+		
+	}
 }
diff --git a/src/com/android/settings/deviceinfo/Memory.java b/src/com/android/settings/deviceinfo/Memory.java
index 52fef32..5b79865 100644
--- a/src/com/android/settings/deviceinfo/Memory.java
+++ b/src/com/android/settings/deviceinfo/Memory.java
@@ -32,16 +32,20 @@ import android.hardware.usb.UsbManager;
 import android.os.Bundle;
 import android.os.Environment;
 import android.os.IBinder;
+import android.os.PowerManager;
 import android.os.RemoteException;
 import android.os.ServiceManager;
+import android.os.SystemProperties;
 import android.os.UserManager;
 import android.os.storage.IMountService;
 import android.os.storage.StorageEventListener;
 import android.os.storage.StorageManager;
 import android.os.storage.StorageVolume;
+import android.preference.CheckBoxPreference;
 import android.preference.Preference;
 import android.preference.PreferenceActivity;
 import android.preference.PreferenceScreen;
+import android.text.TextUtils;
 import android.util.Log;
 import android.view.Menu;
 import android.view.MenuInflater;
@@ -80,6 +84,10 @@ public class Memory extends SettingsPreferenceFragment {
     private UsbManager mUsbManager;
 
     private ArrayList<StorageVolumePreferenceCategory> mCategories = Lists.newArrayList();
+    private static final String KEY_SWITCH_STORAGE = "key_switch_storage";
+    private static final String VOLD_SWITCH_PERSIST_PROP = "persist.sys.vold.switchexternal";
+    private static final String VOLD_SWITCHABLEPAIR_PROP = "persist.sys.vold.switchablepair";
+    private CheckBoxPreference mSwitchStoragePref;
 
     @Override
     public void onCreate(Bundle icicle) {
@@ -94,6 +102,27 @@ public class Memory extends SettingsPreferenceFragment {
 
         addPreferencesFromResource(R.xml.device_info_memory);
 
+        String voldswitch = SystemProperties.get(VOLD_SWITCH_PERSIST_PROP, "0");
+        mSwitchStoragePref = (CheckBoxPreference) findPreference(KEY_SWITCH_STORAGE);
+        mSwitchStoragePref.setChecked("1".equals(voldswitch));
+        if (!Environment.isExternalStorageEmulated()) {
+            Log.i(TAG, "Checking to see if vold switch is possible on this device.");
+            String PRIMARY_STORAGE = System.getenv("EXTERNAL_STORAGE");
+            String SECONDARY_STORAGE = System.getenv("SECONDARY_STORAGE");
+            if (!TextUtils.isEmpty(PRIMARY_STORAGE) && !TextUtils.isEmpty(SECONDARY_STORAGE)) {
+                SystemProperties.set(VOLD_SWITCHABLEPAIR_PROP, PRIMARY_STORAGE + ',' +
+                        SECONDARY_STORAGE);
+                Log.i(TAG, "Setting persist.sys.vold.switchablepair=" + PRIMARY_STORAGE + ',' +
+                        SECONDARY_STORAGE);
+            } else {
+                Log.i(TAG, "Vold switch not possible on this device.");
+            }
+        }
+
+        if (SystemProperties.get(VOLD_SWITCHABLEPAIR_PROP).equals("")) {
+            removePreference(KEY_SWITCH_STORAGE);
+        }
+
         addCategory(StorageVolumePreferenceCategory.buildForInternal(context));
 
         final StorageVolume[] storageVolumes = mStorageManager.getVolumeList();
@@ -213,7 +242,13 @@ public class Memory extends SettingsPreferenceFragment {
 
     @Override
     public boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen, Preference preference) {
-        if (StorageVolumePreferenceCategory.KEY_CACHE.equals(preference.getKey())) {
+        if(preference == mSwitchStoragePref) {
+            Log.d(TAG,"Setting persist.sys.vold.switchexternal to "+(
+                    mSwitchStoragePref.isChecked() ? "1" : "0"));
+            SystemProperties.set(VOLD_SWITCH_PERSIST_PROP,
+                    mSwitchStoragePref.isChecked() ? "1" : "0");
+            showRebootPrompt();
+        } else if (StorageVolumePreferenceCategory.KEY_CACHE.equals(preference.getKey())) {
             ConfirmClearCacheFragment.show(this);
             return true;
         }
@@ -423,4 +458,21 @@ public class Memory extends SettingsPreferenceFragment {
             return builder.create();
         }
     }
+
+    private void showRebootPrompt() {
+        AlertDialog dialog = new AlertDialog.Builder(getActivity())
+                .setTitle(R.string.reboot_prompt_title)
+                .setMessage(R.string.reboot_prompt_message)
+                .setPositiveButton(R.string.yes, new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialog, int which) {
+                        PowerManager pm = (PowerManager) getSystemService(Context.POWER_SERVICE);
+                        pm.reboot(null);
+                    }
+                })
+                .setNegativeButton(R.string.no, null)
+                .create();
+
+        dialog.show();
+    }
 }
-- 
1.8.3.2

